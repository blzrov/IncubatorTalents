import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import styles from '../styles/Home.module.scss'

import { sessionOptions } from '/lib/session';
import { withIronSessionSsr } from "iron-session/next";

import axios from '/utils/rest';

import { SimpleGrid, Text, Container, Space, Card, Group, Button, useMantineTheme, Loader, Progress } from '@mantine/core';

export default function Home({ courses }) {

	const theme = useMantineTheme();

	return (
		<div className={styles.container}>
			<Head>
				<title>Инкубатор талантов</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Container>
				<Space h="xl" />
				<Text size="xl" weight={700} color="orange" transform="uppercase">
					Доступные курсы
				</Text>
				<Space h="lg" />

				<SimpleGrid cols={3}>
					{courses.map(({ course, tasks, tasks_ready }) => {
						return <Card p="lg" key={course.id} style={{ boxShadow: '0 0 12px #999', marginBottom: '20px' }}>

							<Card.Section style={{ position: 'relative' }}>
								<Text color="orange" size="lg" weight={600} style={{ position: 'absolute', bottom: '10px', left: '20px', zIndex: '10', filter: 'drop-shadow(0px 0px 4px #333)' }}>Прогресс</Text>
								<Image src={'/' + course.image} width={300} height={180} alt="Инкубатор талантов" />
							</Card.Section>
							<Progress color="orange" size="lg" value={(tasks_ready / tasks) * 100} style={{ zIndex: '12' }} />
							<Group position="apart" style={{ marginBottom: 5, marginTop: theme.spacing.sm }}>
								<Text weight={500}>{course.name}</Text>


							</Group>
							<Link passHref href={`/courses/${course.id}`}>
								<Button color="green" fullWidth style={{ marginTop: 14 }}>
									Начать обучение
								</Button>
							</Link>
						</Card>
					})}
				</SimpleGrid>
			</Container>
		</div>
	)
}

export const getServerSideProps = withIronSessionSsr(
	async function getServerSideProps({ req }) {
		if (!req.cookies['user-cookies']) {
			return {
				redirect: {
					destination: '/auth',
					permanent: false,
				}
			}
		}
		const response = await axios.get(`/public/courses`, {
			headers: {
				Cookie: `user-cookies=${req.cookies['user-cookies']};`
			}
		});
		let courses = [];
		if (response.status === 200) {
			courses = response.data;
		}
		return {
			props: {
				courses: courses,
				user: req.session.user,
			}
		};
	},
	sessionOptions
);
