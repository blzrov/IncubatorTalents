import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import { sessionOptions } from "/lib/session";
import { withIronSessionSsr } from "iron-session/next";
import Row from "react-bootstrap/Row";
import Col from "react-bootstrap/Col";
import axios from "/utils/rest";

import { Text, Container, Space, Card, Group, Button, useMantineTheme, Progress, Title } from "@mantine/core";

export default function Days({ course, days, tasks, tasks_ready }) {
  const theme = useMantineTheme();

  const secondaryColor = theme.colorScheme === "dark" ? theme.colors.dark[1] : theme.colors.gray[7];

  return (
    <>
      <Head>
        <title>{course.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Space h="xl" />
        <Row>
          <Col md={4}>
            {course.image && <Image src={"/" + course.image} width={1200} height={550} alt="Инкубатор талантов" />}
            <div>{course.name}</div>
            <div>Прогресс</div>
            <Progress color="orange" size="lg" value={(tasks_ready / tasks) * 100} style={{ zIndex: "12" }} />
          </Col>
          <Col md={8}>
            {days.map((day, index) => {
              if (!days[index - 1] || days[index - 1].show_day) {
                return (
                  <Card p="lg" key={day.id} style={{ boxShadow: "0 0 12px #999", marginBottom: "20px" }}>
                    <Card.Section>
                      {day.image && <Image src={"/" + day.image} width={300} height={120} alt="Инкубатор талантов" />}
                    </Card.Section>

                    <Group position="apart" style={{ marginBottom: 5, marginTop: theme.spacing.sm }}>
                      <Text size="lg" weight={700} color="orange">
                        {day.name}
                      </Text>
                    </Group>
                    <Link passHref href={`/courses/${course.id}/days/${day.id}`}>
                      <Button color="green" fullWidth style={{ marginTop: 14 }}>
                        Открыть день
                      </Button>
                    </Link>
                  </Card>
                );
              } else {
                return <div key={day.id}></div>;
              }
            })}
            <Text
              size="sm"
              weight={500}
              style={{ color: secondaryColor, lineHeight: 1.5 }}
              dangerouslySetInnerHTML={{ __html: course.description }}
            ></Text>
          </Col>
        </Row>
      </Container>
    </>
  );
}

export const getServerSideProps = withIronSessionSsr(async function getServerSideProps({ req, res, query }) {
  if (!req.cookies["user-cookies"]) {
    return {
      redirect: {
        destination: "/auth",
        permanent: false,
      },
    };
  }
  const { id } = query;
  const response = await axios.get(`/public/courses/${id}`, {
    headers: {
      Cookie: `user-cookies=${req.cookies["user-cookies"]};`,
    },
  });
  let course = {};
  let days = [];
  let tasks = 0;
  let tasks_ready = 0;
  if (response.status === 200) {
    course = response.data.course;
    days = response.data.days;
    tasks = response.data.tasks;
    tasks_ready = response.data.tasks_ready;
  }
  return {
    props: {
      course: course,
      days: days,
      tasks: tasks,
      tasks_ready: tasks_ready,
      user: req.session.user,
    },
  };
}, sessionOptions);
