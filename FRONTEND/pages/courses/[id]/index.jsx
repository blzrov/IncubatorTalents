import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import { sessionOptions } from '/lib/session';
import { withIronSessionSsr } from "iron-session/next";

import axios from '/utils/rest';

import { Text, Container, Space, Card, Group, Button, useMantineTheme, Progress, Title } from '@mantine/core';

export default function Days({ course, days, tasks, tasks_ready }) {

	const theme = useMantineTheme();

	const secondaryColor = theme.colorScheme === 'dark'
		? theme.colors.dark[1]
		: theme.colors.gray[7];

	return (
		<>
			<Head>
				<title>Инкубатор талантов</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Container>
				<Space h="xl" />
				<Card p="lg">
					<Card.Section style={{ position: 'relative' }}>
						{course.image && <Image src={'/' + course.image} width={1200} height={550} alt="Инкубатор талантов" />}
						<Title order={1} weight={700} style={{ position: 'absolute', top: '20px', left: '20px', filter: 'drop-shadow(0px 0px 12px #FFF)', color: '#fd7e14' }}>{course.name}</Title>
						<Text color="orange" size="xl" weight={600} style={{ position: 'absolute', bottom: '15px', left: '20px', zIndex: '10', filter: 'drop-shadow(0px 0px 4px #333)' }}>Прогресс</Text>
					</Card.Section>

					<Progress color="orange" size="lg" value={(tasks_ready / tasks) * 100} style={{ zIndex: '12' }} />

					<Text size="sm" weight={500} style={{ color: secondaryColor, lineHeight: 1.5 }}
						dangerouslySetInnerHTML={{ __html: course.description }}>
					</Text>
					<Space h="sm" />
					<Text size="sm" weight={500}>
						Расписание нашего лагеря<br /><br />

						10:00 - Каждый будний день с понедельника по пятницу  в личном кабинете тебе будут открываться небольшие задания. Постарайся их не откладывать и сразу выполнять, оставляя отчет в специальном поле (до 15:00 текущего дня). В ответ ты получишь обратную связь от преподавателя<br /><br />

						12:00–13:00 - Каждый вторник в это время будет проходит онлайн мастер-класс в Зум. Подключайся за 5 минут до начала и не опаздывай <br /><br />

						12:00–13:00 - Каждую пятницу мы будем играть онлайн в профориентационную игру и изучать разные профессии. Подключайся за 5 минут до начала и не опаздывай <br /><br />
					</Text>

					<Space h="lg" />
					{days.map((day, index) => {
						if (!days[index - 1] || days[index - 1].show_day) {
							return <Card p="lg" key={day.id} style={{ boxShadow: '0 0 12px #999', marginBottom: '20px' }}>
								<Card.Section>
									{day.image && <Image src={'/' + day.image} width={300} height={120} alt="Инкубатор талантов" />}
								</Card.Section>

								<Group position="apart" style={{ marginBottom: 5, marginTop: theme.spacing.sm }}>
									<Text size="lg" weight={700} color="orange">{day.name}</Text>
								</Group>
								<Link passHref href={`/courses/${course.id}/days/${day.id}`}>
									<Button color="green" fullWidth style={{ marginTop: 14 }}>
										Открыть день
									</Button>
								</Link>
							</Card>
						} else {
							return <div key={day.id}></div>
						}
					})}
				</Card>
			</Container>
		</>
	)
}

export const getServerSideProps = withIronSessionSsr(
	async function getServerSideProps({ req, res, query }) {
		const { id } = query
		const response = await axios.get(`/public/courses/${id}`, {
			headers: {
				Cookie: `user-cookies=${req.cookies['user-cookies']};`
			}
		});
		let course = {};
		let days = [];
		let tasks = 0;
		let tasks_ready = 0;
		if (response.status === 200) {
			course = response.data.course;
			days = response.data.days;
			tasks = response.data.tasks;
			tasks_ready = response.data.tasks_ready;
		}
		return {
			props: {
				course: course,
				days: days,
				tasks: tasks,
				tasks_ready: tasks_ready,
				user: req.session.user,
			}
		};
	},
	sessionOptions
);