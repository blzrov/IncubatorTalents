import { useEffect, useState } from 'react';
import { useRouter } from 'next/router'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import axios from '/utils/rest';

import { SimpleGrid, Text, Container, Space, Card, Group, Badge, Button, useMantineTheme, Loader } from '@mantine/core';

export default function Days() {
	const router = useRouter()
	console.log(router.query)
	const { id } = router.query
	const [daysLoading, setDaysLoading] = useState(false);
	const [courseLoading, setCourseLoading] = useState(false);
	const [daysError, setDaysError] = useState(false);
	const [course, setCourse] = useState([]);
	const [courseError, setCourseError] = useState([]);
	const [days, setDays] = useState([]);

	const theme = useMantineTheme();

	const secondaryColor = theme.colorScheme === 'dark'
		? theme.colors.dark[1]
		: theme.colors.gray[7];

	useEffect(() => {
		if (id) {
			setDaysLoading(true);
			setCourseLoading(true);
			axios.get(`/main/courses/${id}`)
				.then(res => {
					if (res.status === 200) {
						if (res.data.length === 1) {
							setCourse(res.data[0]);
						} else {
							setCourseError('У вас нет доступа к этому курсу');
						}
					} else {
						setCourseError('Ошибка получения курса, пожалуйста, попробуйте позже');
					}
				})
				.catch(error => {
					console.log(error);
					setCourseError('Ошибка получения курса, пожалуйста, попробуйте позже');
				})
				.finally(() => {
					setCourseLoading(false);
				})
			axios.get(`/main/courses/${id}/days`)
				.then(res => {
					if (res.status === 200) {
						setDays(res.data);
					} else {
						setDaysError('Ошибка получения списка дней, пожалуйста, попробуйте позже');
					}
				})
				.catch(error => {
					console.log(error);
					setDaysError('Ошибка получения списка дней, пожалуйста, попробуйте позже');
				})
				.finally(() => {
					setDaysLoading(false);
				})
		}
	}, [id])

	return (
		<>
			<Head>
				<title>Инкубатор талантов</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Container>
				<Space h="xl" />
				<Card p="lg">
					{courseLoading && <Loader color="orange" variant="bars" />}
					<Card.Section>
						{course.image && <Image src={'/' + course.image} width={1200} height={550} alt="Инкубатор талантов" />}
					</Card.Section>

					<Group position="apart" style={{ marginBottom: 5, marginTop: theme.spacing.sm }}>
						<Text weight={500}>{course.name}</Text>
					</Group>

					<Text size="sm" weight={500} style={{ color: secondaryColor, lineHeight: 1.5 }}
						dangerouslySetInnerHTML={{ __html: course.description }}>
					</Text>
					<Space h="sm" />
					<Text size="sm" weight={500}>
						Расписание нашего лагеря<br /><br />

						10:00 - Каждый будний день с понедельника по пятницу  в личном кабинете тебе будут открываться небольшие задания. Постарайся их не откладывать и сразу выполнять, оставляя отчет в специальном поле (до 15:00 текущего дня). В ответ ты получишь обратную связь от преподавателя<br /><br />

						12:00–13:00 - Каждый вторник в это время будет проходит онлайн мастер-класс в Зум. Подключайся за 5 минут до начала и не опаздывай (❗️❗️❗️сюда бы сразу вставить ссылку, но пока ее у меня нет)<br /><br />

						12:00–13:00 - Каждую пятницу мы будем играть онлайн в профориентационную игру и изучать разные профессии. Подключайся за 5 минут до начала и не опаздывай (❗️❗️❗️сюда бы сразу вставить ссылку, но пока ее у меня нет)<br /><br />
					</Text>

					<Space h="lg" />
					{daysLoading && <Loader color="orange" variant="bars" />}
					<Text color="red" weight={500}>
						{daysError}
					</Text>
					{!daysLoading && days.map(day => {
						return <Card p="lg" key={course.id} style={{ boxShadow: '0 0 12px #999', marginBottom: '20px' }}>
							<Card.Section>
								{day.image && <Image src={'/' + day.image} width={300} height={120} alt="Инкубатор талантов" />}
							</Card.Section>

							<Group position="apart" style={{ marginBottom: 5, marginTop: theme.spacing.sm }}>
								<Text size="lg" weight={700} color="orange">{day.name}</Text>
							</Group>
							<Link passHref href={`/courses/${course.id}/days/${day.id}`}>
								<Button color="green" fullWidth style={{ marginTop: 14 }}>
									Открыть день
								</Button>
							</Link>
						</Card>
					})}
				</Card>
			</Container>
		</>
	)
}
