import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import { sessionOptions } from "/lib/session";
import { withIronSessionSsr } from "iron-session/next";
import Row from "react-bootstrap/Row";
import Col from "react-bootstrap/Col";
import axios from "/utils/rest";
import Container from "react-bootstrap/Container";

import {
  Text,
  Space,
  Card,
  RingProgress,
  Group,
  Center,
  Tabs,
  Button,
  useMantineTheme,
  Progress,
  Title,
} from "@mantine/core";

export default function Tasks({ course, day, tasks, tasks_ready }) {
  const theme = useMantineTheme();

  const secondaryColor = theme.colorScheme === "dark" ? theme.colors.dark[1] : theme.colors.gray[7];

  return (
    <>
      <Head>
        <title>Инкубатор талантов</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Space h="xl" />
        <div style={{ color: "#036459", fontSize: "24px", fontWeight: "600" }}>
          Курсы &gt;{" "}
          <span style={{ fontSize: "14px" }}>
            {course.name} &gt; {day.name}
          </span>
        </div>
        <Space h="xl" />
        <Row>
          <Col md={4}>
            <Card shadow="sm" padding="lg" radius="md" withBorder className="mb-4 p-5" style={{ height: "300px" }}>
              <div
                style={{
                  color: "#036459",
                  fontWeight: "600",
                  fontSize: "24px",
                }}
              >
                {day.name}
              </div>
              {/* <div>
                {day.image ? (
                  <Image src={"/" + day.image} width={"100%"} height={"100%"} alt="Инкубатор талантов" />
                ) : course.image ? (
                  <Image src={"/" + course.image} width={"100%"} height={"100%"} alt="Инкубатор талантов" />
                ) : (
                  <></>
                )}
              </div> */}
            </Card>
            <Card shadow="sm" padding="lg" radius="md" withBorder>
              <div className="d-flex justify-content-center">
                <RingProgress
                  label={<Text align="center">{Math.round((tasks_ready / tasks.length) * 100)}%</Text>}
                  sections={[{ value: (tasks_ready / tasks.length) * 100, color: "#1FBEAC" }]}
                />
              </div>
            </Card>
          </Col>
          <Col md={8}>
            <Card shadow="sm" padding="lg" radius="md" withBorder>
              <Tabs unstyled color="#036459">
                <Tabs.Tab label="Видео">
                  <div style={{ fontWeight: "600", fontSize: "20px", color: "#036459", margin: "30px 0" }}>
                    Посмотрите видео и выполните задания
                  </div>
                  <Card shadow="sm" padding="lg" radius="md" withBorder>
                    <Center>
                      <iframe
                        width={700}
                        height={400}
                        src={day.video}
                        frameBorder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                        allowFullScreen
                      ></iframe>
                    </Center>
                  </Card>
                </Tabs.Tab>
                <Tabs.Tab label="Задания">
                  {tasks.map((task) => {
                    return (
                      <Card p="lg" key={task.id} style={{ boxShadow: "0 0 12px #999", marginBottom: "20px" }}>
                        <Card.Section>
                          {task.image && (
                            <Image src={"/" + task.image} width={300} height={120} alt="Инкубатор талантов" />
                          )}
                        </Card.Section>

                        <Group position="apart" style={{ marginBottom: 5, marginTop: theme.spacing.sm }}>
                          <Text size="lg" weight={700} color="#036459">
                            {task.name}
                          </Text>
                        </Group>
                        <Link passHref href={`/courses/${course.id}/days/${day.id}/tasks/${task.id}`}>
                          <Button color="green" fullWidth style={{ marginTop: 14 }}>
                            Открыть задание
                          </Button>
                        </Link>
                      </Card>
                    );
                  })}
                </Tabs.Tab>
              </Tabs>
            </Card>
          </Col>
        </Row>
        <Card p="lg">
          <Text
            size="sm"
            weight={500}
            style={{ color: secondaryColor, lineHeight: 1.5 }}
            dangerouslySetInnerHTML={{ __html: day.description }}
          ></Text>
        </Card>
      </Container>
    </>
  );
}

export const getServerSideProps = withIronSessionSsr(async function getServerSideProps({ req, query }) {
  if (!req.cookies["user-cookies"]) {
    return {
      redirect: {
        destination: "/auth",
        permanent: false,
      },
    };
  }
  const { day_id } = query;
  const response = await axios.get(`/public/days/${day_id}`, {
    headers: {
      Cookie: `user-cookies=${req.cookies["user-cookies"]};`,
    },
  });
  let course = {};
  let day = {};
  let tasks = [];
  let tasks_ready = 0;
  if (response.status === 200) {
    course = response.data.course;
    day = response.data.day;
    tasks = response.data.tasks;
    tasks_ready = response.data.tasks_ready;
  }
  return {
    props: {
      course: course,
      day: day,
      tasks: tasks,
      tasks_ready: tasks_ready,
      user: req.session.user,
    },
  };
}, sessionOptions);
